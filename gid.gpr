-- This is a GNAT, GCC or GNAT Programming Studio (GPS) project file
-- for the Generic Image Decoder ( http://sf.net/projects/gen-img-dec/ )
-- Build me with "gnatmake -P gid.gpr", or open me with GPS
--
project GID is

   for Source_Dirs use (".", "test");
   for Exec_Dir use "test";
   type Build_Mode_Type is
      ("Debug", "Fast_but_checked", "Fast", "Small", "Smallest", "Profiling");
   Build_Mode : Build_Mode_Type := external ("Build_Mode", "Debug");

   case Build_Mode is
      when "Debug" =>
         for Main use ("tb.ads", "to_bmp.adb", "mini.adb", "steg.adb");
         for Object_Dir use "obj_debug";
      when "Fast" =>
         for Main use ("to_bmp.adb", "mini.adb", "steg.adb");
         for Object_Dir use "obj_fast";
      when "Fast_but_checked" =>
         for Main use ("to_bmp.adb", "mini.adb", "steg.adb");
         for Object_Dir use "obj_safer";
      when "Small" =>
         for Main use ("to_bmp.adb", "mini.adb", "steg.adb");
         for Object_Dir use "obj_small";
      when "Smallest" =>
         for Main use ("to_bmp.adb", "mini.adb", "steg.adb");
         for Object_Dir use "obj_smallest";
      when "Profiling" =>
         for Main use ("to_bmp.adb", "mini.adb", "steg.adb");
         for Object_Dir use "obj_profiling";
   end case;

   package Compiler is
      case Build_Mode is
         when "Debug" =>
            for Default_Switches ("ada") use ("-gnat95", "-gnatybru", "-gnatwa", "-gnatVa", "-gnato", "-g", "-fno-inline", "-fstack-check", "-gnatec../debug.pra");
         when "Fast" =>
            for Default_Switches ("ada") use ("-O2", "-gnatpn", "-ffunction-sections", "-funroll-loops", "-fpeel-loops", "-ftracer", "-funswitch-loops", "-fweb", "-frename-registers", "-ftree-vectorize", "-fipa-cp-clone", "-fgcse-after-reload");
         when "Fast_but_checked" =>
            for Default_Switches ("ada") use ("-O2", "-gnato",  "-ffunction-sections", "-funroll-loops", "-fpeel-loops", "-ftracer", "-funswitch-loops", "-fweb", "-frename-registers", "-ftree-vectorize", "-fipa-cp-clone", "-fgcse-after-reload");
         when "Small" =>
            for Default_Switches ("ada") use ("-Os", "-gnatpn", "-ffunction-sections", "-falign-jumps=0", "-falign-loops=0", "-falign-functions=0", "-mpreferred-stack-boundary=2");
         when "Smallest" =>
            for Default_Switches ("ada") use ("-Os", "-gnatp", "-fno-inline",  "-ffunction-sections", "-falign-jumps=0", "-falign-loops=0", "-falign-functions=0", "-mpreferred-stack-boundary=2");
         when "Profiling" =>
            for Default_Switches ("ada") use ("-O3", "-gnatp", "-fno-inline", "-funroll-loops", "-fpeel-loops", "-funswitch-loops", "-ftracer", "-fweb", "-frename-registers", "-g", "-pg");
      end case;
   end Compiler;

   package Linker is
      case Build_Mode is
         when "Debug" =>
            for Default_Switches ("ada") use ("-g");
         when "Fast" =>
            for Default_Switches ("ada") use ("-s", "-Wl,--gc-sections");
         when "Fast_but_checked" =>
            for Default_Switches ("ada") use ("-s", "-Wl,--gc-sections");
         when "Small" =>
            for Default_Switches ("ada") use ("-s", "-Wl,--gc-sections");
         when "Smallest" =>
            for Default_Switches ("ada") use ("-s", "-Wl,--gc-sections");
         when "Profiling" =>
            for Default_Switches ("ada") use ("-pg");
      end case;
   end Linker;

   package Binder is
      case Build_Mode is
         when "Debug" =>
            for Default_Switches ("ada") use ("-E");
         when "Fast" =>
         when "Fast_but_checked" =>
         when "Small" =>
         when "Smallest" =>
         when "Profiling" =>
      end case;
   end Binder;

   package Builder is
      for Default_Switches ("ada") use ("-j2", "-C");
   end Builder;

   package Ide is
      for Default_Switches ("adacontrol") use ("-f", "verif.aru");
   end Ide;

end GID;
